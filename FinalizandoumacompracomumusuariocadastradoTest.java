// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class FinalizandoumacompracomumusuariocadastradoTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void finalizandoumacompracomumusuariocadastrado() {
    driver.get("http://automationpractice.com/index.php");
    driver.manage().window().setSize(new Dimension(1536, 824));
    driver.findElement(By.linkText("Sign out")).click();
    driver.findElement(By.linkText("Sign in")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys("thiagoc.costaleal@gmail.com");
    driver.findElement(By.id("passwd")).click();
    driver.findElement(By.id("passwd")).sendKeys("55763ty15kb");
    driver.findElement(By.cssSelector("#SubmitLogin > span")).click();
    driver.findElement(By.cssSelector(".sfHover > .sf-with-ul")).click();
    driver.findElement(By.cssSelector(".hovered .product-name")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".exclusive > span"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.cssSelector(".exclusive > span")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".btn-google-plus"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector("h2:nth-child(2)")).click();
    assertThat(driver.findElement(By.cssSelector("h2:nth-child(2)")).getText(), is("Product successfully added to your shopping cart"));
    driver.findElement(By.cssSelector(".button-medium > span")).click();
    driver.findElement(By.cssSelector("tr > .first_item")).click();
    driver.findElement(By.cssSelector("tr > .first_item")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("tr > .first_item"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector("tr > .first_item")).getText(), is("Product"));
    driver.findElement(By.cssSelector("tr > .item:nth-child(2)")).click();
    driver.findElement(By.cssSelector("tr > .item:nth-child(2)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("tr > .item:nth-child(2)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector("tr > .item:nth-child(2)")).getText(), is("Description"));
    driver.findElement(By.cssSelector("tr > .item:nth-child(3)")).click();
    driver.findElement(By.cssSelector("tr > .item:nth-child(3)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("tr > .item:nth-child(3)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector("tr > .item:nth-child(3)")).getText(), is("Avail."));
    driver.findElement(By.cssSelector("tr > .item:nth-child(4)")).click();
    driver.findElement(By.cssSelector("tr > .item:nth-child(4)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("tr > .item:nth-child(4)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector("tr > .item:nth-child(4)")).click();
    assertThat(driver.findElement(By.cssSelector("tr > .item:nth-child(4)")).getText(), is("Unit price"));
    driver.findElement(By.cssSelector("tr > .item:nth-child(5)")).click();
    assertThat(driver.findElement(By.cssSelector("tr > .item:nth-child(5)")).getText(), is("Qty"));
    driver.findElement(By.cssSelector("tr > .item:nth-child(6)")).click();
    assertThat(driver.findElement(By.cssSelector("tr > .item:nth-child(6)")).getText(), is("Total"));
    driver.findElement(By.cssSelector(".text-right:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".first_item .page-subheading")).click();
    assertThat(driver.findElement(By.cssSelector(".first_item .address_alias")).getText(), is("(MY ADDRESS)"));
    driver.findElement(By.cssSelector(".last_item .page-subheading")).click();
    assertThat(driver.findElement(By.cssSelector(".last_item .address_alias")).getText(), is("(MY ADDRESS)"));
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.cssSelector(".button:nth-child(4) > span")).click();
    driver.findElement(By.cssSelector("td:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector("td:nth-child(3)")).getText(), is("My carrier Delivery next day!"));
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.cssSelector(".fancybox-error")).click();
    assertThat(driver.findElement(By.cssSelector(".fancybox-error")).getText(), is("You must agree to the terms of service before continuing."));
    driver.findElement(By.cssSelector(".fancybox-item")).click();
    driver.findElement(By.id("cgv")).click();
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.linkText("Pay by bank wire (order processing will be longer)")).click();
    driver.findElement(By.cssSelector("#cart_navigation span")).click();
    driver.findElement(By.cssSelector(".cheque-indent")).click();
    assertThat(driver.findElement(By.cssSelector(".cheque-indent > .dark")).getText(), is("Your order on My Store is complete."));
    driver.close();
  }
}
